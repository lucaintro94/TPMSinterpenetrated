% =========================================================================
%  Title: Interpenetrated Triply-Periodic Minimal Surface
%  Author: Luca D'Andrea
%  email: luca.dandrea@polimi.it
%  Date: 30 September 2025
% =========================================================================

% Generate TMPS with edge dislocation

% =========================================================================
%
% In the first section of the code the 3D binary image is generated by
% setting the number of repetitive cells, the pixels per edge, and the two
% parameters affecting the porosity (b and d).
%
% In the second section the image is saved as tiff file.
%
% =========================================================================

clearvars
clc

for interp = 1:2

    %cell units per direction
    c = 3;
    %number of pixel per direction
    n = c*100+1;
    %known term
    b = 1.62;
    %thickness-related parameter
    delta = 0.85; 

    if interp == 1
        bb = -b;
    elseif interp == 2
        bb = b;
    end

    b = bb;

    %preparazione della matrice
    ratio = 1;
    M = zeros((n-1),(n-1),(n-1));

    s = 1.0;
    t = 1.0;
    u = 1.0;
    index_tot = 1;

    for z1 = 1:(n-1)
        for y1 = 1:(n-1)
            for x1 = 1:(n-1)
                x = s*x1;
                y = t*y1;
                z = u*z1;

                % Gyroid
                f(x1,y1,z1) = sin(2*pi*x*c/n)*cos(2*pi*y*c/n)+ sin(2*pi*y*c/n)*cos(2*pi*z*c/n)+ sin(2*pi*z*c/n)*cos(2*pi*x*c/n)+b;


                if f(x1,y1,z1) < delta && f(x1,y1,z1) > (-1*delta)
                    M(x1,y1,z1) = 1;
                    M_q(x1,y1) = M(x1,y1,z1);
                else
                    M(x1,y1,z1) = 0;
                    M_q(x1,y1) = M(x1,y1,z1);
                end
            end
        end
    end

    if interp == 1
        AA = M;
    elseif interp == 2
        BB = M;
    end
end

CC = AA + BB;

% volumetric fraction
rho = sum(CC(:))/(size(CC,1)*size(CC,2)*size(CC,3));


% this is just fro visualization
AAc = AA;
BBc = 2*BB;
CCc = AAc + BBc;
volumeViewer(CCc)



%%
clearvars -except CC b delta rho
filename = strcat('Gyroid_b',string(b),'_d',string(delta),'_rho',string(rho),'.tif');

AA = uint8(double(CC.*255));
for k = 1:size(AA,3)
    imwrite(uint8(AA(:, :, k)*255), filename, 'WriteMode', 'append');
end
